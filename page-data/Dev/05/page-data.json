{"componentChunkName":"component---src-templates-blog-post-js","path":"/Dev/05/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"0bca7f95-15a0-5b54-be65-6859b8da389b","excerpt":"06 장 매개변수와 return 문을 정리하라  개발하면서 흔히 겪는 일 중의 하나가 기존에 만든 함수를 확장하는 일이다. 하나만 받던 인자를 두 개, 세 개씩 추가해야 할 때 해당 함수가 쓰인 모든 파일을 찾아서 값을 넘겨주는 일은 번거로우며 깜빡 잊고 건너뛰어버릴 수 있다. 차라리 수정하는 함수 안에서 예외처리를 하는 편이 낫다. undefined…","html":"<ul>\n<li>\n<p>06 장 매개변수와 return 문을 정리하라 </p>\n<ul>\n<li>개발하면서 흔히 겪는 일 중의 하나가 기존에 만든 함수를 확장하는 일이다. 하나만 받던 인자를 두 개, 세 개씩 추가해야 할 때 해당 함수가 쓰인 모든 파일을 찾아서 값을 넘겨주는 일은 번거로우며 깜빡 잊고 건너뛰어버릴 수 있다. 차라리 수정하는 함수 안에서 예외처리를 하는 편이 낫다. undefined인 경우를 따져 삼항연산자나 단락평가를 해서 기본값을 지정해도 인자가 많아질 수록 코드가 장황해진다. 이때 매개변수 기본값을 사용하면 중괄호 안에서 undefined 인지 판단하는 과정과 기본값 설정하는 과정을 압축할 수 있다. </li>\n<li>매개변수 기본값 설정의 단점은 인자를 순서대로 넘겨야 하기 때문에 중간을 비워둘 수 없다는 점이다. undefined를 직접 넘겨줘도 되지만 인자 개수가 많아지면 순서가 헷갈려 실수할 가능성이 높다. </li>\n<li>객체의 해체할당을 통해서 필요한 인자만 넘겨줄 수 있다. 해체 할당은 마치 변수를 새롭게 선언하듯 사용하며 중괄호({})로 감싸 객체의 속성임을 표시한다. 변수명은 반드시 객체에 지정한 속성명과 일치해야 한다. 만약 속성명과 일치하지 않으면 undefined 값이 나온다. </li>\n<li>해체 할당과 더불어 spread operator를 같이 사용하면 일부 속성만 변경한 새로운 객체를 생성할 때 편리하다. 값이나 명칭을 변경할 속성만 해체 할당하고 나머지는 spread operator로 가져와 반환 할 중괄호({})에 원하는 형태로 재할당을 한다. </li>\n<li>배열의 해체 할당은 대괄호([]) 안에서 맨 앞의 항목 부터 변수 처럼 선언하여 가져올 수 있다. spread operator를 사용하면 일부 항목은 변수처럼 가져와 사용하고 나머지는 배열 형태를 유지하여 사용할 수 있다. </li>\n<li>rest parameter는 정확히 개수를 알 수 없는 여러 자료형들의 인자들을 배열 형태로 묶어서 가져올 때 사용한다. </li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"05","date":"February 09, 2021"}}},"pageContext":{"slug":"/Dev/05/","previous":{"fields":{"slug":"/Dev/04/"},"frontmatter":{"title":"04","category":"Dev","draft":false}},"next":{"fields":{"slug":"/Dev/06/"},"frontmatter":{"title":"06","category":"Dev","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}