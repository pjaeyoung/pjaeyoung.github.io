{"componentChunkName":"component---src-templates-blog-post-js","path":"/sccap/\"20210702\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"5672e27e-6fb4-5b39-8f2f-d785d7c191bf","excerpt":"스캡프로젝트 redux, asyncStorage, fs 수정 기존코드는 내부적으로 try-catch를 썼더니 redux에서 error 분기점을 하기 어려운 문제가 있어 상위 try-catch로 넘기는 방향으로 수정함 그리고 기본폴더 예외케이스를 위해 IStoredFolder 타입에 filePath를 추가했다. redux에서 변경된 코드. try-catch를 redux 내에서 처리하게 했다. 문제는 파일시스템, asyncStorage…","html":"<h2 id=\"스캡프로젝트\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BA%A1%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"스캡프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스캡프로젝트</h2>\n<ul>\n<li>\n<p>redux, asyncStorage, fs 수정</p>\n<ul>\n<li>기존코드는 내부적으로 try-catch를 썼더니 redux에서 error 분기점을 하기 어려운 문제가 있어 상위 try-catch로 넘기는 방향으로 수정함</li>\n<li>그리고 기본폴더 예외케이스를 위해 IStoredFolder 타입에 filePath를 추가했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IStoredFolder</span> <span class=\"token punctuation\">{</span>\nid<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\nfolderName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\nborderColor<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\nfilePath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>redux에서 변경된 코드. try-catch를 redux 내에서 처리하게 했다.</li>\n<li>문제는 파일시스템, asyncStorage 둘 중 하나가 에러를 생성했을 때 롤백 기능과 같은 에러 처리가 어렵다는 점이다.</li>\n<li>추후에 async thunk를 파일시스템, asyncStorage 각각 만들어 파이프라인으로 연결해서 처리하는 작업을 진행해야 한다.</li>\n<li>특히 파일시스템은 통과가 되었는데 asyncStorage에서 문제가 발생하면 asyncStorage에 다시 시도를 한다든지, 몇번의 시도가 실패하면 파일시스템을 복구하는 등의 추가 작업이 필요하다.</li>\n<li>또한 엣지케이스인 유저가 내장메모리를 직접 건드렸을 경우를 고려해 앱을 매번 열때마다 스캡폴더에 접근해서 asyncStorage와 동기화 처리를 해야 할 것이다.</li>\n<li>그리고 곧바로 에러를 throw하면 rejected로 다 넘어가는 줄 알았으나 일부 에러는 그렇지 않은 경우가 있어 thunkAPI로 직접 reject시켜야 한다는 걸 알게되었다.</li>\n<li>thunkAPI에 full 시키는 기능도 있길래 extraReducers를 대체하는 api로 생각해서 extraReducers를 다 삭제해봤다. 결과는 놉! redux state에 제대로 반영이 되지 않아서 이부분은 다시 살렸다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> increment <span class=\"token operator\">=</span> <span class=\"token function\">createAsyncThunk</span><span class=\"token punctuation\">(</span>\n<span class=\"token string\">'increment'</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newUserFolder<span class=\"token operator\">:</span> IStoredFolder<span class=\"token punctuation\">,</span> thunkAPI</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> entries<span class=\"token punctuation\">,</span> loading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> thunkAPI<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>folders <span class=\"token keyword\">as</span> IUserFolderState\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> newEntries <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>entries<span class=\"token punctuation\">,</span> newUserFolder<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">await</span> <span class=\"token constant\">FS</span><span class=\"token punctuation\">.</span><span class=\"token function\">createFolder</span><span class=\"token punctuation\">(</span>newUserFolder<span class=\"token punctuation\">.</span>folderName<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> storage<span class=\"token punctuation\">.</span><span class=\"token function\">setUserFolders</span><span class=\"token punctuation\">(</span>newEntries<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> entries<span class=\"token operator\">:</span> newEntries<span class=\"token punctuation\">,</span> loading <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> thunkAPI<span class=\"token punctuation\">.</span><span class=\"token function\">rejectWithValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> entries<span class=\"token punctuation\">,</span> loading<span class=\"token operator\">:</span> <span class=\"token constant\">LOADING</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FAILED</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"20210702","date":"July 02, 2021"}}},"pageContext":{"slug":"/sccap/\"20210702\"/","previous":{"fields":{"slug":"/sccap/\"20210701\"/"},"frontmatter":{"title":"20210701","category":"sccap","draft":false}},"next":{"fields":{"slug":"/sccap/\"20210706\"/"},"frontmatter":{"title":"20210706","category":"sccap","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}