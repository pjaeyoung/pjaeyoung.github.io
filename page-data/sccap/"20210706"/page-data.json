{"componentChunkName":"component---src-templates-blog-post-js","path":"/sccap/\"20210706\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"93c4a463-9490-5635-a110-2c10aab4762d","excerpt":"스캡 프로젝트 기본폴더 터치 이벤트 및 PHOTO 삭제 alert 수정 기본폴더와 유저폴더를 동시에 사용할 수 있도록 기존에 photo slice 를 적용하는 대신 파일시스템으로 이미지 load 와 이미지 삭제 기능을 완성함 navigation을 왔다 갔다하면서 react state가 제대로 업데이트 안 되는 이슈가 존재했음 경우1) MAIN화면에서 CATEGORY 이동 : 분류한 이미지를 가져오려면 다시 MAIN에 나갔다가 들어와야 함 경우2) PHOTO 화면에서 CATEGORY…","html":"<h2 id=\"스캡-프로젝트\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BA%A1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"스캡 프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스캡 프로젝트</h2>\n<ul>\n<li>\n<p>기본폴더 터치 이벤트 및 PHOTO 삭제 alert 수정</p>\n<ul>\n<li>기본폴더와 유저폴더를 동시에 사용할 수 있도록 기존에 photo slice 를 적용하는 대신 파일시스템으로 이미지 load 와 이미지 삭제 기능을 완성함</li>\n<li>navigation을 왔다 갔다하면서 react state가 제대로 업데이트 안 되는 이슈가 존재했음</li>\n<li>경우1) MAIN화면에서 CATEGORY 이동 : 분류한 이미지를 가져오려면 다시 MAIN에 나갔다가 들어와야 함</li>\n<li>경우2) PHOTO 화면에서 CATEGORY이동 : 삭제한 이미지가 여전히 렌더링되고 있음</li>\n<li>stack에 쌓여있어도 컴포넌트가 refresh가 되도록 react navigation이 제공하는 기능 중 <code class=\"language-text\">useIsFocused</code> (해당 스크린이 focus 상태인지 여부를 알 수 있는 hook)을 사용함</li>\n<li><code class=\"language-text\">isFocused</code> 값을 useEffect의 두 번째 인자로 넣어 focus 상태가 바뀔 때마다 photo 데이터를 저장함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> isFocused <span class=\"token operator\">=</span> <span class=\"token function\">useIsFocused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setPhotosDataAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> images <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token constant\">RNFS</span><span class=\"token punctuation\">.</span><span class=\"token function\">readFolder</span><span class=\"token punctuation\">(</span>\n    folderId <span class=\"token operator\">===</span> <span class=\"token string\">'basicFolder'</span>\n      <span class=\"token operator\">?</span> <span class=\"token constant\">RNFS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BASICFOLDER_FILEPATH</span>\n      <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">RNFS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FILEPATH</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>folderName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setError</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'정리된 사진이 아직 없습니다 :( \\n 스캡으로 스크린샷을 즉시 분류해보세요!'</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n\n  isFocused <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token function\">setPhotosData</span><span class=\"token punctuation\">(</span>\n      images<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aImage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> folderId<span class=\"token punctuation\">,</span> source<span class=\"token operator\">:</span> aImage<span class=\"token punctuation\">.</span>path <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setPhotosDataAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>isFocused<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>CATEGORY 화면에서 사진 이미지가 한 줄을 못 채워도 가운데로 정렬되는 현상 수정</p>\n<ul>\n<li>PhotoList 의 style에서 <code class=\"language-text\">alignItems : \"center\"</code> 부분을 <code class=\"language-text\">padding</code> 값만 주고 PhotoItem의 height과 width를 <code class=\"language-text\">Dimenstions.get(\"window\").width*0.33-7</code> 로 잡음. 해당 공식은 padding값(7)을 제외한 3등분(0.33)으로 크기를 잡는 것</li>\n</ul>\n</li>\n<li>\n<p>캡쳐 감지 토글 기능 구현</p>\n<ul>\n<li>usePermissions에서 permission이 granted되면 무조건 monitorScreenshot을 실행하도록 되어있는 상태여서 토글로 끄더라도 매번 앱을 열때마다 forground가 실행됨</li>\n<li>이부분을 해결하기 위해 asyncStorage에서 스크린샷 감지 기능 여부를 boolean으로 저장하고 permission 체크 시 해당 값도 분기점에 포함시켜 해결함</li>\n</ul>\n</li>\n<li>\n<p>사용방법 기능(온보딩 재실행) 구현</p>\n<ul>\n<li>온보딩 맨 처음에 ‘유저가 폴더 생성 후 온보딩을 더 이상 진행하지 않았을 경우’ 를 대비해 매번 userFolders 초기화했기 때문에 SETTING화면에서 ONBOARDING으로 넘어갔을 때 기존에 만들어 놓은 폴더들이 싹 날라가는 심각한 버그가 존재했음</li>\n<li>asyncStorage에서 가져온 completedOnboarding 여부에 따라 userFolders를 리셋할지 결정하여 해결함</li>\n<li>추가적으로 SETTING화면에서 넘어와 온보딩이 실행된 경우 ONBOARDING-05까지만 실행하도록 했음</li>\n</ul>\n</li>\n<li>친구에게 공유하기 기능은 PM분들께서 공유해야 할 컨텐트를 제공해주지 않은 상태라 일단 배제함.</li>\n<li>리뷰작성하기 기능 : <code class=\"language-text\">react-native-in-app-review</code> 라이브러리를 적용했는데 실행해도 아무것도 나오지 않는다. 내부 오류인 건지 혹은 play store에 올려놓지 않은 상태라 구동이 되지 않는 것인지 모르겠다. (후자일 가능성이 높다)</li>\n<li>피드백 보내기 기능 : <code class=\"language-text\">react-native-mail</code> 라이브러리를 사용하여 구현</li>\n<li>\n<p>Notification 아이콘 수정</p>\n<ul>\n<li><a href=\"https://romannurik.github.io/AndroidAssetStudio/icons-launcher.html#foreground.type=clipart&#x26;foreground.clipart=android&#x26;foreground.space.trim=1&#x26;foreground.space.pad=0.25&#x26;foreColor=rgba(96%2C%20125%2C%20139%2C%200)&#x26;backColor=rgb(68%2C%20138%2C%20255)&#x26;crop=0&#x26;backgroundShape=square&#x26;effects=none&#x26;name=ic_launcher\">Android Asset Studio</a> 를 사용해서 ic_launcher icon을 생성함</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"20210706","date":"July 06, 2021"}}},"pageContext":{"slug":"/sccap/\"20210706\"/","previous":{"fields":{"slug":"/sccap/\"20210702\"/"},"frontmatter":{"title":"20210702","category":"sccap","draft":false}},"next":{"fields":{"slug":"/challenge30/28/"},"frontmatter":{"title":"28","category":"challenge30","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}