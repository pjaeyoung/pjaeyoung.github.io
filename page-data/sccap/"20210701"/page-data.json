{"componentChunkName":"component---src-templates-blog-post-js","path":"/sccap/\"20210701\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"7a6cf659-7346-5974-b2b0-f2496e3dca9d","excerpt":"스캡프로젝트 MAIN화면에서 기본폴더 클릭 시 CATEGORY 화면으로 넘어가는 부분에서 이슈가 생김 예외케이스인 기본폴더 생각 안 하고 코드를 짰더니 발생한 이슈 😂 기존의 파일 시스템을 다루는 파일 fsFunctions는 SCCAP 폴더를 기준으로 CRUD로 구현된 상태고그와 달리 기본폴더는 스크린샷폴더에 속함. 그래서, 아래와 같은 수정사항이 발생함 스토리지에 담길 폴더 데이터 형식 변경 fsFunctions…","html":"<h2 id=\"스캡프로젝트\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BA%A1%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"스캡프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스캡프로젝트</h2>\n<ul>\n<li>MAIN화면에서 기본폴더 클릭 시 CATEGORY 화면으로 넘어가는 부분에서 <strong>이슈</strong>가 생김</li>\n<li>예외케이스인 기본폴더 생각 안 하고 코드를 짰더니 발생한 이슈 😂</li>\n<li>기존의 파일 시스템을 다루는 파일 fsFunctions는 SCCAP 폴더를 기준으로 CRUD로 구현된 상태고그와 달리 기본폴더는 스크린샷폴더에 속함.</li>\n<li>\n<p>그래서, 아래와 같은 수정사항이 발생함</p>\n<ul>\n<li>스토리지에 담길 폴더 데이터 형식 변경</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IStoredFolder</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  folderName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  borderColor<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  filePath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token comment\">// 파일 경로</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>fsFunctions 인자 변경</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// 기존 folderName 대신 filePath 전달</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">readFolderAsync</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n  filePath<span class=\"token punctuation\">,</span>\n  onSuccess<span class=\"token punctuation\">,</span>\n  onFailure<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  folderName<span class=\"token operator\">:</span> string\n  onSuccess<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Function\n  onFailure<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Function\n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token generic-function\"><span class=\"token function\">handleAsync</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">RNFS</span><span class=\"token punctuation\">.</span>ReadDirItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    onSuccess<span class=\"token punctuation\">,</span>\n    onFailure<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">asyncFunction</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">RNFS</span><span class=\"token punctuation\">.</span><span class=\"token function\">readDir</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>대대적인 수정사항이 발생해서 일단 미루기로 함, 가장 중요한 openApp 부터 해결하는 게 우선임</li>\n<li>\n<p>기본폴더에 대한 예외케이스의 경우 어떻게 다뤄야할 지 잠깐 정리하자면 아래와 같음</p>\n<ul>\n<li>파일 접근권한이 허용되었을 때 순차적으로 진행</li>\n<li>폰 기종마다 다른 스크린샷폴더 경로 문제 대응을 위해, 스크린샷을 사용자 몰래 실행시켜 filePath를 알아낸다.</li>\n<li>알아낸 filePath와 id는 basicFolder인 IStoredFolder 데이터를 생성한다.</li>\n<li>2에서 생성한 기본폴더데이터를 storage에 저장한다.</li>\n</ul>\n</li>\n<li>\n<p>storage에 들어있는 userFolders 와 redux 연동 완료</p>\n<ul>\n<li>이 기능을 구현하니 떡하니 <strong>크리티컬한 문제</strong>가 보인다.</li>\n<li>생성한 폴더들이 제대로 저장이 되고 있지 않는다.</li>\n<li>이 부분은 redux loading 처리를 하지 않았기 때문에 발생한 문제</li>\n<li>곧바로 수정이 들어가야함</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"20210701","date":"July 01, 2021"}}},"pageContext":{"slug":"/sccap/\"20210701\"/","previous":{"fields":{"slug":"/sccap/\"20210630\"/"},"frontmatter":{"title":"20210630","category":"sccap","draft":false}},"next":{"fields":{"slug":"/sccap/\"20210702\"/"},"frontmatter":{"title":"20210702","category":"sccap","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}