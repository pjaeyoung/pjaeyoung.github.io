{"componentChunkName":"component---src-templates-blog-post-js","path":"/sccap/\"20210623\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"10a4b8ea-cbbd-5fc4-b3ef-5750218dd21e","excerpt":"스캡 프로젝트 폴더 클릭 시 클릭한 폴더에서 수정모드로 변경하기 완료 고민했던 방식 두 가지 NewFolderSvg를 따로 두지 않고 FolderSvg 컴포넌트 자식으로 TextInput 컴포넌트를 두어  속성을  상태 값에 따라 참/거짓으로 수정모드의 컴포넌트를 렌더링할지 결정 NewFolderSvg를 그대로 사용하되 이름은 생성모드/수정모드 둘 다 쓴다는 점에서 명칭을EditableFolderSvg…","html":"<h2 id=\"스캡-프로젝트\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BA%A1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"스캡 프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스캡 프로젝트</h2>\n<ul>\n<li>폴더 클릭 시 클릭한 폴더에서 수정모드로 변경하기 완료</li>\n<li>\n<p>고민했던 방식 두 가지</p>\n<ol>\n<li>NewFolderSvg를 따로 두지 않고 FolderSvg 컴포넌트 자식으로 TextInput 컴포넌트를 두어 <code class=\"language-text\">editable</code> 속성을 <code class=\"language-text\">editMode</code> 상태 값에 따라 참/거짓으로 수정모드의 컴포넌트를 렌더링할지 결정</li>\n<li>NewFolderSvg를 그대로 사용하되 이름은 생성모드/수정모드 둘 다 쓴다는 점에서 명칭을EditableFolderSvg로 변경하고 <code class=\"language-text\">editableIndex</code> 상태값으로 렌더링할 위치를 결정</li>\n</ol>\n</li>\n<li>두 방식 모두 전제하는 조건 : 모든 FolderSvg를 렌더링하되 유저가 생성한 폴더 개수를 초과한 FolderSvg는 <code class=\"language-text\">display</code>를 <code class=\"language-text\">none</code> 해둠</li>\n<li>1번은 뒤로가기에도 키보드를 고정시키려 만들어 뒀던 <code class=\"language-text\">useKeyboard</code> 가 이상현상(키보드가 계속 보였다가 사라지는 것을 반복하는 현상)을 일으켜서 2번 방식으로 진행함. 상위 컴포넌트인 FolderScreen 에서 내려주는 <code class=\"language-text\">borderColor</code>, <code class=\"language-text\">folderName</code> 상태 값이 변경될 때마다 FolderSvg 컴포넌트들이 계속 렌더링하게 되기 때문에 나타나는 현상. 그래서 <code class=\"language-text\">borderColor</code> , <code class=\"language-text\">folderName</code> 변경사항에 영향을 받는 컴포넌트를 최소화하기 위해 2번 방식 택함. 2번 방식은 EditableFolderSvg(구명칭 : NewFolderSvg) 하나만 영향을 받음.</li>\n<li>EditableFolderSvg는 이제 생성모드와 수정모드 둘 다 사용하기 때문에 내부에서 folderLayout을 처리하는 대신 외부에서 값을 받도록 함</li>\n<li>\n<p>폴더 이미지 클릭 이벤트를 등록할 때 예상치 못한 이슈를 발견함.</p>\n<ul>\n<li>FolderSvg 를 TouchableOpacity 컴포넌트로 감싸서 구현하려고 시도했음</li>\n<li>문제는 FolderSvg 컴포넌트 자식인 DeleteButton의 클릭 이벤트가 먹히지 않음. TouchableOpacity의 클릭 이벤트로 흡수됨</li>\n<li>그래서 FolderSvg와 DeleteButton을 분리함</li>\n<li>DeleteButton이 이제 부모 컴포넌트가 스크린화면 전체로 잡혔으므로 layout을 다시 재정의함</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span>userFolders<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">,</span> folderName<span class=\"token punctuation\">,</span> borderColor <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> FolderSvg <span class=\"token operator\">=</span> FolderSvgs<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TouchableOpacity</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>userFolderLayoutData<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>folderLayout<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">onPress</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">onEditMode</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FolderSvg</span></span> <span class=\"token attr-name\">borderColor</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>borderColor<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FolderName</span></span> <span class=\"token attr-name\">top</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token string\">'60%'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'45%'</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>folderName<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FolderName</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FolderSvg</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TouchableOpacity</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>editMode <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DeleteButton</span></span>\n            <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>userFolderLayoutData<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>deleteButtonLayout<span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">onPressIn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">onClickDeleteButton</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Icon</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>remove<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#fff<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">DeleteButton</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>\n<p>수정모드에서 이름 변경없이 완료 버튼할 때 폴더명 중복 Toast가 뜨는 이슈가 생김</p>\n<ul>\n<li>폴더명 중복 체크할 때 id가 동일하지 않는 조건을 추가하여 해결</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\nuserFolders<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">userFolder</span> <span class=\"token operator\">=></span> userFolder<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> id <span class=\"token operator\">&amp;&amp;</span> userFolder<span class=\"token punctuation\">.</span>folderName <span class=\"token operator\">===</span> folderName\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\nToastAndroid<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token string\">'중복된 폴더명 입력'</span><span class=\"token punctuation\">,</span> ToastAndroid<span class=\"token punctuation\">.</span><span class=\"token constant\">SHORT</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"20210623","date":"June 23, 2021"}}},"pageContext":{"slug":"/sccap/\"20210623\"/","previous":{"fields":{"slug":"/sccap/\"20210622\"/"},"frontmatter":{"title":"20210622","category":"TIL","draft":false}},"next":{"fields":{"slug":"/sccap/\"20210628\"/"},"frontmatter":{"title":"20210628","category":"TIL","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}