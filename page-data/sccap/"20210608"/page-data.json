{"componentChunkName":"component---src-templates-blog-post-js","path":"/sccap/\"20210608\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"4ec90316-71d2-595e-9ae2-bc9259ed1d6a","excerpt":"오늘 우연히 ‘스크린샷 감지 후 앱실행’ 성능향상 방법을 찾게 되었다. 😂  라이브러리를 아래처럼 직접 수정했다. 그리고 우리 앱에서  의 callback인  에서 곧바로 path를 전달하면 된다. 특이하게  의 첫 번째  안에서 파일 작업을 하면 로딩 속도가 느린데 아래처럼 두 번째  에서 하면 빠르게 로드된다. (그래도 여전히 여러 번 스크린샷 할수록 호출 횟수가 증가한다) 한 가지 아쉬운 점은 아래 warning…","html":"<ul>\n<li>\n<p>오늘 우연히 <strong>‘스크린샷 감지 후 앱실행’</strong> 성능향상 방법을 찾게 되었다. 😂</p>\n<ul>\n<li><code class=\"language-text\">react-native-detector</code> 라이브러리를 아래처럼 직접 수정했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token comment\">// react-native-detector > DetectorModule.kt</span>\n<span class=\"token comment\">// 기존에 path 넘겨주지 않은 부분을 넘겨주도록 함</span>\n<span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onScreenCaptured</span><span class=\"token punctuation\">(</span>path<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      reactContext\n              <span class=\"token punctuation\">.</span><span class=\"token function\">getJSModule</span><span class=\"token punctuation\">(</span>DeviceEventManagerModule<span class=\"token punctuation\">.</span>RCTDeviceEventEmitter<span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">)</span>\n              ~~<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UIApplicationUserDidTakeScreenshotNotification\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>~~\n              <span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UIApplicationUserDidTakeScreenshotNotification\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// react-native-detector > index.tsx</span>\n<span class=\"token comment\">// callback에도 path 넘겨줌</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">addScreenshotListener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback<span class=\"token operator\">:</span> Function</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Platform<span class=\"token punctuation\">.</span><span class=\"token constant\">OS</span> <span class=\"token operator\">===</span> <span class=\"token string\">'android'</span><span class=\"token punctuation\">)</span> Detector<span class=\"token punctuation\">.</span><span class=\"token function\">startScreenshotDetection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> eventEmitter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NativeEventEmitter</span><span class=\"token punctuation\">(</span>Detector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\neventEmitter<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  EventsName<span class=\"token punctuation\">.</span>UserDidTakeScreenshot<span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> eventEmitter<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>그리고 우리 앱에서 <code class=\"language-text\">addScreenshotListener</code> 의 callback인 <code class=\"language-text\">userDidScreenshot</code> 에서 곧바로 path를 전달하면 된다.</li>\n<li>특이하게 <code class=\"language-text\">openApp</code> 의 첫 번째 <code class=\"language-text\">then</code> 안에서 파일 작업을 하면 로딩 속도가 느린데 아래처럼 두 번째 <code class=\"language-text\">then</code> 에서 하면 빠르게 로드된다. (그래도 여전히 여러 번 스크린샷 할수록 호출 횟수가 증가한다)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// backgroundSerivce.ts</span>\n<span class=\"token keyword\">const</span> userDidScreenshot <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>path<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token parameter\"><span class=\"token keyword\">void</span></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// base64 만 허용하는 react-native-share 기능을 사용하기 위한 작업</span>\n<span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">RNFS</span><span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">file://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">openApp</span><span class=\"token punctuation\">(</span>packageId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>screenshotPath<span class=\"token punctuation\">,</span> screenshotBase64<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sort'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> screenshotPath<span class=\"token punctuation\">,</span> screenshotBase64 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>한 가지 아쉬운 점은 아래 warning 메세지가 나온다. 추측상 이미지 경로는 생성되었으나 이미지 파일이 생성된 것은 아니라서 곧장 해당 경로에 접근해도 파일이 없다고 나오는 것 같다. (그래서 <code class=\"language-text\">react-native-detector</code> 가 screenshot path를 전달하지 않은 까닭일지도). 혹은 <code class=\"language-text\">openApp</code> 자체가 문제일지도 모른다. 자세한 건 나중에 알아보자. 지금은 파일시스템에 집중!</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token punctuation\">[</span>Error<span class=\"token operator\">:</span> <span class=\"token constant\">ENOENT</span><span class=\"token operator\">:</span> <span class=\"token operator\">/</span>storage<span class=\"token operator\">/</span>emulated<span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token constant\">DCIM</span><span class=\"token operator\">/</span>Screenshots<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>pending<span class=\"token operator\">-</span><span class=\"token number\">1623761149</span><span class=\"token operator\">-</span>Screenshot_20210608<span class=\"token operator\">-</span><span class=\"token number\">214549</span>_Chrome<span class=\"token punctuation\">.</span>jpg<span class=\"token operator\">:</span> open failed<span class=\"token operator\">:</span> <span class=\"token constant\">ENOENT</span> <span class=\"token punctuation\">(</span>No such file or directory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> open <span class=\"token string\">'/storage/emulated/0/DCIM/Screenshots/.pending-1623761149-Screenshot_20210608-214549_Chrome.jpg'</span><span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p>폴더 생성 / 삭제 , 사본이미지 생성/삭제 테스트 완료</p>\n<ul>\n<li><code class=\"language-text\">react-native-fs</code> 의 <code class=\"language-text\">copyFile</code> 메서드를 사용해서 사본 이미지 생성하려고 할 때 계속 <code class=\"language-text\">EISDIR: illegal operation on a directory</code> 에러가 나서 애를 먹었다. 알고보니 내 실수.. <a href=\"https://stackoverflow.com/questions/58525721/eisdir-illegal-operation-on-a-directory-read-in-react-native-file-system\">stackoverflow</a> 에서 <code class=\"language-text\">destinationPath</code> 의 마지막에 파일명도 써줘야 한다는 걸 알았다!</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"20210608","date":"June 08, 2021"}}},"pageContext":{"slug":"/sccap/\"20210608\"/","previous":{"fields":{"slug":"/sccap/\"20210607\"/"},"frontmatter":{"title":"20210607","category":"TIL","draft":false}},"next":{"fields":{"slug":"/sccap/\"20210609\"/"},"frontmatter":{"title":"20210609","category":"TIL","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}