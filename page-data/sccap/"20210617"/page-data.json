{"componentChunkName":"component---src-templates-blog-post-js","path":"/sccap/\"20210617\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"6674dc06-0a2d-5369-9cdb-ee200d79cee5","excerpt":"스캡 프로젝트 놓친 디테일 - 추천 색상 클릭시 inner border color 렌더링 - 추가함 React Native에서 따로  속성을 갖고 있지 않음 그래서 추천색상을 감싸는  컴포넌트와 추천색상  컴포넌트 두 개로 분리함  는 검정 테두리를 렌더링  는 흰 테두리를 렌더링 그런데  가 제대로 동작하지 않는 이슈가 있었다. 테두리 노출/비노출을  값을 0과…","html":"<h2 id=\"스캡-프로젝트\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BA%A1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"스캡 프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스캡 프로젝트</h2>\n<ul>\n<li>\n<p>놓친 디테일 - 추천 색상 클릭시 inner border color 렌더링 - 추가함</p>\n<ul>\n<li>React Native에서 따로 <code class=\"language-text\">inset</code> 속성을 갖고 있지 않음</li>\n<li>그래서 추천색상을 감싸는 <code class=\"language-text\">ColorBorder</code> 컴포넌트와 추천색상 <code class=\"language-text\">Color</code> 컴포넌트 두 개로 분리함</li>\n<li><code class=\"language-text\">ColorBorder</code> 는 검정 테두리를 렌더링</li>\n<li><code class=\"language-text\">Color</code> 는 흰 테두리를 렌더링</li>\n<li>그런데 <code class=\"language-text\">ColorBorder</code> 가 제대로 동작하지 않는 이슈가 있었다. 테두리 노출/비노출을 <code class=\"language-text\">borderWidth</code> 값을 0과 2 사이로 조정해서 구현했는데, 반영이 되는 것도 있고 안 되는 것도 있었다. 추측하기로는 <code class=\"language-text\">borderWidth</code> 조절이 레이아웃을 새로 그리는 <code class=\"language-text\">reflow</code> 를 일으키는데 이부분이 제대로 동작이 안 되는 것 같다. 성능문제도 있고 해서 <code class=\"language-text\">borderWidth</code> 는 고정시키되 <code class=\"language-text\">borderColor</code> 를 조정하여 이슈를 해결했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> ColorBorder <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token function\">View</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> isClicked<span class=\"token operator\">:</span> boolean <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\nwidth<span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span>\nheight<span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span>\nmarginLeft<span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\nmarginRight<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\nborderWidth<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\nborderRadius<span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span>\nborderColor<span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>isClicked <span class=\"token operator\">?</span> <span class=\"token string\">'black'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'transparent'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> Color <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token function\">View</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> isClicked<span class=\"token operator\">:</span> boolean <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\nbackgroundColor<span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>\nwidth<span class=\"token operator\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span>\nheight<span class=\"token operator\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span>\nborderRadius<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\nborderWidth<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// inner border는 클릭하지 않은 경우 backgroundColor와 동일하게 적용하여</span>\n<span class=\"token comment\">// border가 아니라 background 일부인 것처럼 속임수를 씀ㅇ</span>\nborderColor<span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>isClicked <span class=\"token operator\">?</span> <span class=\"token string\">'#fff'</span> <span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">FolderScreen.tsx</code> 에서 한 곳에 작성해뒀던 코드들을 작은 컴포넌트들로 분리함</p>\n<ul>\n<li><code class=\"language-text\">Alert</code> : 커스텀으로 만든 alert</li>\n<li><code class=\"language-text\">CreateFolderMessage</code> : 폴더 생성 요청 메세지</li>\n<li><code class=\"language-text\">FloatingButton</code> : 플로팅 버튼 (폴더생성모드, 생성완료, 메인화면으로)</li>\n<li><code class=\"language-text\">FolderSvgs</code> : 유저가 생성한 폴더</li>\n<li><code class=\"language-text\">NewFolderSvg</code> : 생성모드의 폴더</li>\n<li><code class=\"language-text\">renderScrollable</code> : 키보드 뒤편 스크롤 가능한 화면</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"20210617","date":"June 17, 2021"}}},"pageContext":{"slug":"/sccap/\"20210617\"/","previous":{"fields":{"slug":"/sccap/\"20210616\"/"},"frontmatter":{"title":"20210616","category":"TIL","draft":false}},"next":{"fields":{"slug":"/sccap/\"20210618\"/"},"frontmatter":{"title":"20210618","category":"TIL","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}