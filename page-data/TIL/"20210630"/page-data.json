{"componentChunkName":"component---src-templates-blog-post-js","path":"/TIL/\"20210630\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b6a74802-430b-5c51-92ad-f25bc3a8c786","excerpt":"스캡프로젝트 튜토리얼 화면 SORT 화면과 동일하지만 추가적으로 가이드 말풍선 노출과 사진 분류 기능을 잠시 막아줄 overlay 기능이 필요했다. 처음에는 SORT…","html":"<h2 id=\"스캡프로젝트\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BA%A1%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"스캡프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스캡프로젝트</h2>\n<ul>\n<li>\n<p>튜토리얼 화면</p>\n<ul>\n<li>SORT 화면과 동일하지만 추가적으로 가이드 말풍선 노출과 사진 분류 기능을 잠시 막아줄 overlay 기능이 필요했다.</li>\n<li>처음에는 SORT 화면에 있는 코드를 그대로 복붙하려고 했으나 <code class=\"language-text\">SortScreen</code> 도 결국 컴포넌트니 그대로 가져다 쓰면 되지 않을까 해서 테스트해보니 성공!</li>\n<li>튜토리얼 화면은 총 세 단계로 구성되어 있고 말풍선도 각각 위치나 내용, 색상이 다르다.</li>\n<li>말풍선에 대한 정보를 배열로 저장하고 <code class=\"language-text\">screenNumber</code>(튜토리얼 화면 단계)에 맞춰 <code class=\"language-text\">SpeechBubble</code> 컴포넌트를 렌더링하는 방식으로 구현했다.</li>\n<li>overlay 화면을 클릭했을 때 <code class=\"language-text\">screenNumber</code> 값을 1 증가시켜 다음 튜토리얼 단계에 보여질 말풍선 데이터를 결정한다.</li>\n<li>overlay 화면을 클릭했을 때 마지막 튜토리얼 화면이면 overlay를 제외시키고 storage에서 completedTutorial 값을 true로 변경해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> TutorialScreen<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">FC</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>overlayVisible<span class=\"token punctuation\">,</span> setOverlayVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>screenNumber<span class=\"token punctuation\">,</span> setScreenNumber<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">incrementScreenNumber</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>screenNumber <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">>=</span> speechBubbles<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setOverlayVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    storage<span class=\"token punctuation\">.</span><span class=\"token function\">setCompletedTutorial</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">setScreenNumber</span><span class=\"token punctuation\">(</span>prev <span class=\"token operator\">=></span> prev <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Wrapper<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Overlay\n      onBackdropPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>incrementScreenNumber<span class=\"token punctuation\">}</span>\n      isVisible<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>overlayVisible<span class=\"token punctuation\">}</span>\n      overlayStyle<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>overlayStyle<span class=\"token punctuation\">}</span>\n      backdropStyle<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>backdropStyle<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>SpeechBubble <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>speechBubbles<span class=\"token punctuation\">[</span>screenNumber<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Overlay<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>SortScreen <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Wrapper<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>backgroundService에서 completedTutorial값에 따라 렌더링할 스크린 분기 처리를 했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span>completedTutorial <span class=\"token operator\">?</span> <span class=\"token string\">'Sort'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Tutorial'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  screenshotPath<span class=\"token punctuation\">,</span>\n  screenshotBase64<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>현재 MAIN화면과 같은 네비게이션 선상에서 Sort를 두니 MAIN이 먼저 출력하고 SORT화면이 나타난다.</p>\n<ul>\n<li>아직 시도해보지 않았지만 SORT를 네비게이션 스택에 두지 않고 state 값으로 SORT 출력과 네비게이션(MAIN, FOLDER, CATEGORY, PHOTO) 출력을 결정해야 해당 현상이 없어질 것 같다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"20210630","date":"June 30, 2021"}}},"pageContext":{"slug":"/TIL/\"20210630\"/","previous":{"fields":{"slug":"/TIL/\"20210629\"/"},"frontmatter":{"title":"20210629","category":"TIL","draft":false}},"next":null}},"staticQueryHashes":["3128451518","521680639"]}