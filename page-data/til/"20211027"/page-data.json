{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/\"20211027\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"fe17ecb9-8f89-5f73-b9f0-e6ff28e28623","excerpt":"Work 오늘 디자인 최종본이 나왔다. 다행히 크게 변화된 곳은 없었다. 반나절은 변경된 디자인을 반영하는 데 보냈다. 기존에 ParallaxScrollView를 외부 라이브러리로 사용했는데, 해당 라이브러리를 따라 만드는 튜토리얼 블로그 글을 보고 코드를 긁어왔다. 그 다음 내 입맛대로 조금 수정했다. 확실히 언제, 어느 위치에서 StickyHeader가 렌더링되는 지 내부 구조를 알고나니 원하는 기능을 구현하기 수월했다. 그러다 하나의 문제에 봉착했다. StickyHeader…","html":"<h2 id=\"work\" style=\"position:relative;\"><a href=\"#work\" aria-label=\"work permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Work</h2>\n<ul>\n<li>오늘 디자인 최종본이 나왔다. 다행히 크게 변화된 곳은 없었다. 반나절은 변경된 디자인을 반영하는 데 보냈다.</li>\n<li>기존에 ParallaxScrollView를 외부 라이브러리로 사용했는데, 해당 라이브러리를 따라 만드는 튜토리얼 블로그 글을 보고 코드를 긁어왔다. 그 다음 내 입맛대로 조금 수정했다. 확실히 언제, 어느 위치에서 StickyHeader가 렌더링되는 지 내부 구조를 알고나니 원하는 기능을 구현하기 수월했다.</li>\n<li>그러다 하나의 문제에 봉착했다. StickyHeader에서 토글 여부에 따라 화면 전체로 아코디언 효과를 보여야 하는데 하단 네비게이션 바가 뚫고 나온다. z index를 줘도 아무런 효과가 없다. 이게 형제 위치에 있지 않아서 그런 것 같다. 대략 아래와 같은 구조로 되어있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">View</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ParallaxScrollView</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n     </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StickyHeader</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n       </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Accordian</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n     </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">StickyHeader</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ParllaxScrollView</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BottomNavigationBar</span></span><span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">View</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>생각해낸 묘안은 React Native에서 제공하는 Modal 컴포넌트를 아코디언에 적용하는 것! 자체적으로 제공하는 기능이다보니 항상 맨 앞에 두는 효과를 얻을 수 있다.</li>\n<li>허나 StickHeader 까지 삼켜버리는데… Modal 아코디언을 StickyHeader 만큼 마진을 줘서 해결! 한 줄 알았지만 iOS는 기종마다 이상하게 나온다.</li>\n<li>예상컨대 이건 SafeAreaView와 관련이 있다!라는 예리한 판단을 했다. 후훗. 정답이었다. StatusBar height에 따라 다르게 표시된다. 이부분은 기종별 StatusBar height을 계산해주는 라이브러리 코드를 긁어와(되도록 라이브러리를 설치 하지 않으려는 발버둥…) StickyHeader 높이와 StatusBar 높이를 더한 값을 마진을 주는 것으로 해결했다.</li>\n</ul>","frontmatter":{"title":"20211027","date":"October 27, 2021"}}},"pageContext":{"slug":"/til/\"20211027\"/","previous":{"fields":{"slug":"/til/\"20211025\"/"},"frontmatter":{"title":"20211025","category":"til","draft":false}},"next":null}},"staticQueryHashes":["3128451518","521680639"]}