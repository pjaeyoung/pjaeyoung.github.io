{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/\"20211001\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"a035ce23-e788-5cec-b511-299d0d2c78ac","excerpt":"Work fastlane 자동화 구축 CI 과정에서 Android 빌드가 성공했다. CI 과정에서 iOS 빌드가 실패했다. 좀 지난 프로젝트여서 그런지 pod update가 필요했다. 이번엔 provisioning 문제. 스타터를 진행했을 때도 생겼던 문제다. 바로 provisioning profile 선택을 잘 못하는 거. Distribution이 아닌 계속 Development를 가져온다. 이 문제를 임시적으로 xcode 상에서 manual로 provisioning profile…","html":"<h2 id=\"work\" style=\"position:relative;\"><a href=\"#work\" aria-label=\"work permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Work</h2>\n<ul>\n<li>\n<p>fastlane 자동화 구축</p>\n<ul>\n<li>CI 과정에서 Android 빌드가 성공했다.</li>\n<li>CI 과정에서 iOS 빌드가 실패했다. 좀 지난 프로젝트여서 그런지 pod update가 필요했다.</li>\n<li>이번엔 provisioning 문제. 스타터를 진행했을 때도 생겼던 문제다. 바로 provisioning profile 선택을 잘 못하는 거. Distribution이 아닌 계속 Development를 가져온다. 이 문제를 임시적으로 xcode 상에서 manual로 provisioning profile을 선택해서 해결했는데 매번 Development와 Distribution을 왔다갔다하기엔 번거로운 문제가 있다. 이제는 어느정도 fastlane에 대한 개념이 쌓이고 나니 빠르게 원하는 기능을 찾았다. <code class=\"language-text\">update_code_signing_setting</code> action이 fastlane 작동 상에서 provisioning profile을 지정하게 만든다. (오와!!)</li>\n<li>match 에러는 사라졌는데 빌드에서 실패했다. 너무 긴 로그들이 쌓여서 에러 로그를 볼 수 없다고 한다. 맙소사. 그럼 어떻게 해결하라고?</li>\n</ul>\n</li>\n<li>\n<p>UI 라이브러리 개발</p>\n<ul>\n<li>일관성 없는 UI 때문에 코드가 지저분하게 작성된 부분이 있어서 이를 어떻게 클린하게 작성할 수 있을 지 고민했다.</li>\n<li>특정 조건일 때만 필수 인자가 되는 부분이 있는데 그 외 조건에서는 그렇지 않으니 이걸 어떻게 제어할 수 있을까</li>\n<li>결국에는 컴포넌트를 쪼개는 게 맞다고 판단되었다. 선배 개발자분도 그 점을 동의했다.</li>\n<li>하지만 현재 다른 팀원이 해당 라이브러리를 쓰고 있는 와중에 갑자기 변경사항을 적용하는 건 어렵고 게다가 개발 기한을 고려했을 때 차후 업데이트 요소로 빼두는 걸로 결정했다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"20211001","date":"October 01, 2021"}}},"pageContext":{"slug":"/til/\"20211001\"/","previous":{"fields":{"slug":"/til/\"20210930\"/"},"frontmatter":{"title":"20210930","category":"til","draft":false}},"next":null}},"staticQueryHashes":["3128451518","521680639"]}