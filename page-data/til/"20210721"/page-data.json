{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/\"20210721\"/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"d2ee8051-df0e-5d02-8c75-714191ea01dc","excerpt":"자료구조/알고리즘 최대힙 삭제를 구현하는 방법을 알게 되었다.\n우선 트리의 제일 위에 있는 노드를 꺼낸다.\n그 다음 트리의 마지막 노드를 제일 위에 넣는다.\n위로 옮긴 노드를 자식 노드들과 크기 비교를 한다.\n만약 자식노드가 더 크다면 자리를 바꾼다.\n마지막 노드에 도달하지 않았고 최대힙의 조건인 ‘부모노드는 자식노드보다 값이 크거나 같다’을 만족하면 비교과정을 반복한다. 면접준비 Q. 자바스크립트에서 this란 ? javascript의 this는 런타임에 결정된다. 함수 밖에서 this…","html":"<h2 id=\"자료구조알고리즘\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"자료구조알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자료구조/알고리즘</h2>\n<p>최대힙 삭제를 구현하는 방법을 알게 되었다.\n우선 트리의 제일 위에 있는 노드를 꺼낸다.\n그 다음 트리의 마지막 노드를 제일 위에 넣는다.\n위로 옮긴 노드를 자식 노드들과 크기 비교를 한다.\n만약 자식노드가 더 크다면 자리를 바꾼다.\n마지막 노드에 도달하지 않았고 최대힙의 조건인 ‘부모노드는 자식노드보다 값이 크거나 같다’을 만족하면 비교과정을 반복한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MaxHeap</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">insert</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> value <span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n      index <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">remove</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> maxValue <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">const</span> lastValue <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> lastValue\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reorder</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> maxValue\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">reorder</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">index</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> large <span class=\"token operator\">=</span> index\n    <span class=\"token keyword\">const</span> l <span class=\"token operator\">=</span> index <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> index <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">const</span> length <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">.</span>length\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;</span> length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>large<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      large <span class=\"token operator\">=</span> l\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">&lt;</span> length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>large<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      large <span class=\"token operator\">=</span> r\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>large <span class=\"token operator\">!==</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> temp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>large<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>large<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heap<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reorder</span><span class=\"token punctuation\">(</span>large<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"면접준비\" style=\"position:relative;\"><a href=\"#%EB%A9%B4%EC%A0%91%EC%A4%80%EB%B9%84\" aria-label=\"면접준비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>면접준비</h2>\n<blockquote>\n<p>Q. 자바스크립트에서 this란 ?</p>\n</blockquote>\n<p>javascript의 this는 런타임에 결정된다. 함수 밖에서 this는 global/window 객체를 가리킨다.\n일반 함수 안에서 this 또한 global/window 객체를 가리킨다.\n생성자 함수를 new 연산자로 호출할 때 this는 인스턴스 객체를 가리킨다.\n객체의 메서드로 호출할 때 this는 호출을 한 객체를 가리킨다.\n일반 함수에 call/apply/bind를 사용하면 첫 번째 인자로 넘겨준 인자가 this를 대체한다.</p>\n<h2 id=\"스캡프로젝트\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BA%A1%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"스캡프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스캡프로젝트</h2>\n<ul>\n<li>\n<p>eslint maximum call stack error 해결</p>\n<ul>\n<li>eslint 관련된 패키지를 다 삭제하고 eslintrc.js 파일도 지웠다.</li>\n<li><code class=\"language-text\">yarn eslint --init</code> 을 사용해서 자동으로 필요한 패키지를 설치하고 eslintrc.js를 작성하도록 했다.</li>\n<li>package.json의 스크립트 lint를 <code class=\"language-text\">eslint --ext .tsx --ext .ts src/</code> 로 작성했다(적용할 범위를 src 폴더 내로 지정함).</li>\n<li>eslint가 잘 되는 걸 확인하고 이참에 husky도 적용했다.</li>\n</ul>\n</li>\n<li>\n<p>husky 적용</p>\n<ul>\n<li>이 프로젝트가 특이하게 server와 client 폴더로 나눠져있다보니 동일한 depth에 위치해야 할 git hooks가 안 먹히는 문제가 있었다.</li>\n<li>이 문제를 해결하는 방법을 공식문서에서 제공해줬다. husky 설치할 때 경로를 지정하면 된다고 설명이 되어있다. 스캡 프로젝트의 경우를 예로 들면 아래처럼 작성된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// package.json</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token property\">\"prepare\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cd .. &amp;&amp; husky install client/.husky\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>그 다음 pre-commit 파일에도 적용할 경로를 입력해준다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># .husky/pre-commit\n# ...\n\ncd client\nyarn lint-staged</code></pre></div>","frontmatter":{"title":"20210721","date":"July 21, 2021"}}},"pageContext":{"slug":"/til/\"20210721\"/","previous":{"fields":{"slug":"/til/\"20210720\"/"},"frontmatter":{"title":"20210720","category":"til","draft":false}},"next":{"fields":{"slug":"/til/\"20210726\"/"},"frontmatter":{"title":"20210726","category":"til","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}