{"componentChunkName":"component---src-templates-blog-post-js","path":"/challenge30/21/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"18e1bfaf-bf2e-511c-acfb-d69662fca8df","excerpt":"…","html":"<h2 id=\"자바스크립트-패턴과-테스트\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%8C%A8%ED%84%B4%EA%B3%BC-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"자바스크립트 패턴과 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;자바스크립트 패턴과 테스트></h2>\n<ul>\n<li>\n<p>장식자 패턴</p>\n<ul>\n<li>기존에 있던 객체나 함수의 기능을 확장시킬 때 원래 기능을 손상시키지 않으면서 새로운 기능을 추가하는 기법 </li>\n<li>\n<p>테스트 포인트</p>\n<ul>\n<li>원 기능을 제대로 수행하는가 (긍정적/부정적)</li>\n<li>추가된 새로운 기능을 수행하는가 </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>전략 패턴</p>\n<ul>\n<li>세부 기능은 다르지만 전체적으로 동일한 과정을 거치는 경우, 세부 기능을 캡슐화하여 로직을 단순화하는 기법, 팩토리 기법과 같이 사용됨 </li>\n<li>이름은 같지만 내부 구현은 제각기 다른 함수를 가진 객체들을 생성(팩토리)한 뒤 객체들을 처리할 때 동일한 메서드를 호출하여 로직이 분기를 나누지 않고 하나로 통일됨  </li>\n<li>\n<p>가령 여러 api로부터 데이터를 받아 대시보드에 출력하는 기능을 구현하고 자 함 </p>\n<ul>\n<li>각 api는 요청 양식과 응답 결과 양식이 다름 </li>\n<li>각 api에 <code class=\"language-text\">requestApi</code> 메서드를 갖춘 객체를 반환하는 팩토리 함수를 구현 </li>\n<li><code class=\"language-text\">requestApi</code>는 내부 구현은 다르지만 이름과 결과는 동일하다는 특징을 가짐</li>\n<li>대시보드 화면으로 라우팅되면 모든 api가 갖고 있는 <code class=\"language-text\">requestApi</code> 메서드를 실행 후 정제된 결과값을 대시보드에 출력함 </li>\n</ul>\n</li>\n<li>\n<p>테스트 포인트 </p>\n<ul>\n<li>팩토리함수가 기대하는 양식을 반환하는가</li>\n<li>전체 프로세스에서 팩토리 함수가 실행되는가</li>\n<li>전체 프로세스가 의도한대로 진행이 되는가</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>DOM 테스트</p>\n<ul>\n<li>폰트크기, 색상, 엘리먼트 구조 등 변경사항이 자주 발생할 외적인 부분은 수동으로 테스트 할 것</li>\n<li>\n<p>집중해야 할 테스트 포인트 </p>\n<ul>\n<li>지정한 이벤트를 실행했을 때 원하는 기능이 실행하는가</li>\n<li>정확한 데이터로 엘리먼트 값이 생성되었는가  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"21","date":"March 13, 2021"}}},"pageContext":{"slug":"/challenge30/21/","previous":{"fields":{"slug":"/uiux/infinite-scroll/"},"frontmatter":{"title":"infinite scroll","category":"uiux","draft":false}},"next":{"fields":{"slug":"/challenge30/22/"},"frontmatter":{"title":"22","category":"challenge30","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}