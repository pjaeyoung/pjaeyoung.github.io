{"componentChunkName":"component---src-templates-blog-post-js","path":"/challenge30/23/","result":{"data":{"site":{"siteMetadata":{"title":"DODO's DEV LOG","author":"dodo","siteUrl":"https://pjaeyoung.github.io","comment":{"disqusShortName":"dodo","utterances":"pjaeyoung/dodo-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"85e1c33e-6165-5fcd-a786-7402c0ef6447","excerpt":"vue 일주일 전 아는 지인 분이 외주를 같이 하자 제안 주셔서 하기로 했다. 클라이언트 측에서 vue를 사용하길 원해서 vue를 공부해야 했다. 이전부터 vue랑 react랑 비교할 겸 공부해볼까 생각만 하다 드디어 제대로 볼 기회가 생겨서 좋다. 좋은 기분도 잠시 react에 익숙한 탓인지 vue 사용법이 괴기하게 느껴졌다. 일단 vue가 framework 없을 때 사용했던 방식에 크게 벗어나지 않도록 구성했다는 의미가 무엇인지 알겠다. vue는 html…","html":"<h2 id=\"vue\" style=\"position:relative;\"><a href=\"#vue\" aria-label=\"vue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vue</h2>\n<p>일주일 전 아는 지인 분이 외주를 같이 하자 제안 주셔서 하기로 했다. 클라이언트 측에서 vue를 사용하길 원해서 vue를 공부해야 했다. 이전부터 vue랑 react랑 비교할 겸 공부해볼까 생각만 하다 드디어 제대로 볼 기회가 생겨서 좋다.</p>\n<p>좋은 기분도 잠시 react에 익숙한 탓인지 vue 사용법이 괴기하게 느껴졌다. 일단 vue가 framework 없을 때 사용했던 방식에 크게 벗어나지 않도록 구성했다는 의미가 무엇인지 알겠다. vue는 html 파일에서 사용하던 익숙한 용어들을 그대로 사용한다. 기본적으로 html에서 콘텐츠를 재사용할 수 있게 해주는 template 태그, javascript를 작성할 수 있는 script 태그, css 를 작성할 수 있는 style 태그로 구분하여 작성한다.</p>\n<p>html에 있는 요소들을 조각조각 나눈 것 처럼 보인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>this is title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>this is body<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'App'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">#app</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> skyblue<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> lightgrey<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>react에 익숙한 사람이라면 위에서 아래로 코드를 살펴보는 것이 익숙할 것이다. 또한 기본적으로 절차적 프로그래밍이기에 위에서 아래로 코드 흐름을 파악하는 것이 대부분 사람들에게 익숙할 것이다. 엘리먼트의 속성값들은 리터럴이 아닌 변수들로 구성된 것들은 대부분 위쪽에서 선언했거나 인자로 참조한 형태로 작성된다. 변수로 참조된 건 모두 ’{}’ 중괄호 하나로 감싸 일관성이 있게 작성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">TodoItem<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  text<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n  id<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n  onDeleteTodoItem<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>function<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TodoItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> text<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> onDeleteTodoItem <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo-item-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-delete-todo-item<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">onDeleteTodoItem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        삭제\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>하지만 vue의 경우 아래에서 위로 코드를 살펴봐야 한다. <strong>코드 흐름에 역행</strong>하기에 보기가 조금 불편하다. 그리고 변수 사용이 일관적이지 않다. 제일 좋지 않다고 생각했던 부분이다. 앞에 <code class=\"language-text\">:</code>나 <code class=\"language-text\">@</code>가 있나 없나에 따라 따옴표(\"\")에 들어있는 값이 변수 혹은 문자열이 된다. <strong>한눈에 변수라고 인식하기 어렵다.</strong> 그리고 함수는 <code class=\"language-text\">@</code>, 그 외 변수는 <code class=\"language-text\">:</code> 기호를 써야 한다. 게다가 <code class=\"language-text\">textContent</code>는 중괄호를 두번 감싸야한다.</p>\n<p>또 마치 즉시 실행할 것처럼 보이는 <code class=\"language-text\">@click=\"onDeleteTodoItem(id)</code> 코드가 위에 react 예시와 같은 <code class=\"language-text\">()=>onDeleteTodoItem(id)</code>와 같은 것이라는 점도 혼란스럽다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">:id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo-item-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{text}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-delete-todo-item<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onDeleteTodoItem(id)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      삭제\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      text<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      id<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">onDeleteTodoItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todoItemId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'delete'</span><span class=\"token punctuation\">,</span> todoItemId<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>그럼에도 vue가 react보다 좋다고 생각했던 부분은 테스트하기 용이한 구조라는 점이다. 모듈 자체가 객체 형태로 되어있어 렌더링 과정을 신경쓰지 않고 각각의 기능들을 테스트하기 쉽다. 그저 객체의 메소드에 접근해서 메소드가 원하는 값을 반환하거나 변형을 가하는지 체크하면 된다.</p>\n<p>그리고 개발자들이 많이 다루는 부분을 미리 기능으로 제공해준다. 가령 <code class=\"language-text\">keep-alive</code>태그를 감싸 state를 유지하고 <code class=\"language-text\">transition</code> 태그로 진입/진출 트랜지션 이벤트를 쉽게 작성할 수 있다. 대신 암기해야할 것들이 많아진다.</p>\n<p>아직 깊게 파고들지 않았기 때문에 내가 모르는 vue의 매력들이 더 존재할 것이라 생각한다. 알게 될 때마다 블로그에 정리해두자.</p>","frontmatter":{"title":"23","date":"April 05, 2021"}}},"pageContext":{"slug":"/challenge30/23/","previous":{"fields":{"slug":"/uiux/html5-canvas-기초다지기--/"},"frontmatter":{"title":"HTML5 Canvas 기초다지기","category":"uiux","draft":false}},"next":{"fields":{"slug":"/uiux/Particle/"},"frontmatter":{"title":"Particle","category":"uiux","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}